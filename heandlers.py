import telebot
from telebot import types
from keyboards import first_keyboard, create_first_set_inline, order_keyboard


def handle_start(bot: telebot.TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

    –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–≤–æ–¥ –¥–ª—è –±—É–∫–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä telebot.TeleBot.
    """
    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        bot.send_message(message.chat.id,
                         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ü–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω!",
                         reply_markup=telebot.types.ReplyKeyboardRemove())

        bot.send_message(message.chat.id, '''–ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π.''',
            reply_markup=first_keyboard()
        )


def handle_messages(bot: telebot.TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.

    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' –∏ –≤—ã–±–æ—Ä –ø–æ–≤–æ–¥–∞ –¥–ª—è –±—É–∫–µ—Ç–∞.
    –ù–∞ –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Å–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä telebot.TeleBot.
    """
    @bot.message_handler(func=lambda message: True)
    def handler_message(message):
        if message.text == '–ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                reply_markup=first_keyboard()
            )
        elif message.text in ("–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–°–≤–∞–¥—å–±–∞", "–í —à–∫–æ–ª—É", "–ë–µ–∑ –ø–æ–≤–æ–¥–∞", "–î—Ä—É–≥–æ–π –ø–æ–≤–æ–¥"):
            bot.send_message(message.chat.id, '–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?',
                             reply_markup=create_first_set_inline()
                             )


def handle_callbacks(bot: telebot.TeleBot, provider_token: str):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫.

    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ü–µ–Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫—É –∑–∞–∫–∞–∑–∞),
    –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫–∞–∑–∞ (–∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ send_invoice),
    –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –≤—ã–±–æ—Ä –¥—Ä—É–≥–∏—Ö –±—É–∫–µ—Ç–æ–≤.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä telebot.TeleBot.
        provider_token: –¢–æ–∫–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∏–∑ .env.
    """
    @bot.callback_query_handler(func=lambda call: True)
    def handle_callback(call):
        user_id = call.from_user.id
        chat_id = call.message.chat.id
        if call.data.startswith('~'):
            price = call.data
            photo_path = None
            caption = "–û–ø–∏—Å–∞–Ω–∏–µ –±—É–∫–µ—Ç–∞."

            if price == '~500':
                photo_path = 'photo/birthday_photo/–Ω–∞ –¥—Ä –∑–∞ 500 —Ä.jpg'
                caption = '–ú–∞–ª–µ–Ω—å–∫–∏–π –∏ –¥—É—à–µ–≤–Ω—ã–π –±—É–∫–µ—Ç.'
            elif price == '~1000':
                photo_path = 'photo/birthday_photo/–¥—Ä –∑–∞ 1000.jpg'
                caption = '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.'

            if photo_path:
                with open(photo_path, 'rb') as photo:
                    bot.send_photo(chat_id, photo, caption=caption,
                                    reply_markup=order_keyboard(price))
                    bot.answer_callback_query(call.id)
            else:
                    bot.answer_callback_query(call.id, "–§–æ—Ç–æ –¥–ª—è —ç—Ç–æ–π —Ü–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", show_alert=True)

        elif call.data.startswith('order_'):
            price = call.data.split('_')[1]
            try:
                amount_rub = int(price.replace('~', ''))
                amount_kopecks = amount_rub * 100
                payload = f"bouquet_{price}_{user_id}"
                title = f"–û–ø–ª–∞—Ç–∞ –±—É–∫–µ—Ç–∞ ({amount_rub} —Ä—É–±.)"
                description = f"–ó–∞–∫–∞–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ @{bot.get_me().username}"
                prices = [types.LabeledPrice(label=f"–ë—É–∫–µ—Ç {amount_rub} —Ä—É–±.", amount=amount_kopecks)]

                if not provider_token:
                    print("–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                    bot.answer_callback_query(call.id, "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–ª–∞—Ç—ã.", show_alert=True)
                    return

                bot.send_invoice(
                    chat_id=chat_id,
                    title=title,
                    description=description,
                    invoice_payload=payload,
                    provider_token=provider_token,
                    currency='RUB',
                    prices=prices
                )
                bot.answer_callback_query(call.id, text="–°–æ–∑–¥–∞–Ω —Å—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É.")

            except ValueError:
                print(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã –≤ –∫–æ–ª–ª–±—ç–∫–µ: {call.data}")
                bot.answer_callback_query(call.id, "–û—à–∏–±–∫–∞ —Ü–µ–Ω—ã.", show_alert=True)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω–≤–æ–π—Å–∞: {e}")
                bot.answer_callback_query(call.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç.", show_alert=True)


        elif call.data == 'consult':
            bot.send_message(
                call.message.chat.id,
                " –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –Ω–∞—à —Ñ–ª–æ—Ä–∏—Å—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 20 –º–∏–Ω—É—Ç:"
            )
        elif call.data == 'more_flowers':
            bot.send_message(
                call.message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±—É–∫–µ—Ç–æ–≤:",
                reply_markup=create_first_set_inline()
            )


def handle_pre_checkout(bot: telebot.TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è PreCheckoutQuery.

    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è Telegram –ø–µ—Ä–µ–¥ –ø–æ–ø—ã—Ç–∫–æ–π —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤.
    –û–Ω –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ('ok=True') –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å ('ok=False') –ø–ª–∞—Ç–µ–∂
    –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥. –í –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–ª–∞—Ç–µ–∂.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä telebot.TeleBot.
    """
    @bot.pre_checkout_query_handler(func=lambda query: True)
    def pre_checkout_query_callback(pre_checkout_query: types.PreCheckoutQuery):
        # print(f"PreCheckoutQuery: {pre_checkout_query.id}")
        # –ü—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∞
        try:
            bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ PreCheckoutQuery {pre_checkout_query.id}: {e}")
            try:
                bot.answer_pre_checkout_query(pre_checkout_query.id, ok=False, error_message="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
            except Exception as final_e:
                 print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –¥–∞–∂–µ –æ—Ç–∫–∞–∑–æ–º –Ω–∞ PreCheckoutQuery {pre_checkout_query.id}: {final_e}")


def handle_successful_payment(bot: telebot.TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ 'successful_payment'.

    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.
    –û–Ω –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä telebot.TeleBot.
    """
    @bot.message_handler(content_types=['successful_payment'])
    def successful_payment_callback(message: types.Message):
        payment_info = message.successful_payment
        amount = payment_info.total_amount / 100
        currency = payment_info.currency
        payload = payment_info.invoice_payload

        # print(f"SuccessfulPayment: user={message.from_user.id}, amount={amount} {currency}, payload={payload}")
        #–ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–û–°–õ–ï –û–ü–õ–ê–¢–´ ---
        # –ò–ú–ï–ù–ù–û –ó–î–ï–°–¨ –ù–£–ñ–ù–û –î–ï–ô–°–¢–í–û–í–ê–¢–¨!
        # 1. –ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑ –ø–æ `payload` –≤ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        # 2. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–∫–∞–∑ –∫–∞–∫ "–û–ø–ª–∞—á–µ–Ω–æ".

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ (Redsys Test) –Ω–∞ —Å—É–º–º—É {amount} {currency} –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n" # –£—Ç–æ—á–Ω–∏–ª–∏, —á—Ç–æ –æ–ø–ª–∞—Ç–∞ —Ç–µ—Å—Ç–æ–≤–∞—è
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üéâ\n"
            f"(Payload: `{payload}`)"
        )

